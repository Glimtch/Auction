@using Newtonsoft.Json;
@using Microsoft.AspNet.Identity;
@model Auction.WEB.Models.DetailedLotViewModel

@{
    ViewBag.Title = "Details";
}


@using (Ajax.BeginForm("DetailsPartial", new {id = Model.Id, current = Model.CurrentPrice }, new AjaxOptions
{
    UpdateTargetId = "bidding",
    LoadingElementId = "loading",
    LoadingElementDuration = 0,
    OnBegin = "OnBegin",
    OnFailure = "OnFailure"
}))
{
    @Html.HiddenFor(model => model.Id)
    <table class="table">
        <tr>
            <td>
                <h2>@Model.Name</h2>
            </td>
            @{
                if (Model.TimeLeft > new TimeSpan(0) &&
                    (User.IsInRole("admin") || User.Identity.GetUserId() == Model.SellerId))
                {
                    <td>
                        <p>
                            <h4>@Html.ActionLink("Edit", "Edit", new { id = Model.Id })</h4>
                        </p>
                    </td>
                    <td>
                        <p>
                            <h4>@Html.ActionLink("Delete", "Delete", new { id = Model.Id })</h4>
                        </p>
                    </td>
                }
            }
        </tr>
        <tr>
            <td>
                @{
                    if (Model.Image != null)
                    {
                        <img src="data:image/png;base64,@Convert.ToBase64String(Model.Image, 0, Model.Image.Length)" style="max-height:360px; max-width:640px" />
                    }
                    else
                    {
                        <img src="@Url.Content("~/Content/no_image.png")" style="max-height:360px; max-width:640px" />
                    }
                }
            </td>
            <td>
                <div>
                    @{
                        if (Model.Description == null)
                        {
                            <h5>No description avaliable for this lot.</h5>
                        }
                        else
                        {
                            <h4>Description:</h4>
                            <h5>@Html.DisplayFor(model => model.Description)</h5>
                        }
                    }
                </div>
            </td>
            <td>
                <div>
                        @{
                            if(User.Identity.GetUserId() != Model.SellerId)
                            {
                                <h4>Seller:</h4>
                                @Html.ActionLink(Model.SellerNickname, "UserProfile", "Account", new { id = Model.SellerId }, null)
                            }
                            else
                            {
                                <h4>You are a proud seller of this lot</h4>
                            }
                        }
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div>
                    <p>
                        <h4>Start price:</h4>
                        $@Html.DisplayFor(model => model.StartPrice)
                    </p>
                </div>
            </td>
            <td>
                <div id="bidding">
                    @{Html.RenderPartial("DetailsPartial", Model);}
                </div>
                <img id="loading" src="@Url.Content("~/Content/loading.gif")" style="display:none" />
            </td>
            <td>
                <div>
                    <h4>Time remaining:</h4>
                    <p id="timeleft"></p>
                </div>
            </td>
        </tr>
    </table>
}

<div>
    @Html.ActionLink("Back to active lots", "Index")
</div>

@section Scripts
{
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.js")

    <script type="text/javascript">
        function OnBegin() {
            $('#bidding').empty();
        }
        function OnFailure(request, error) {
            $("#bidding").html("An error occured while bidding.");
        }
    </script>

    <script>
        var timeleft = @Html.Raw(Json.Encode(Model.TimeLeft));
        var secondsleft1 = parseInt(timeleft.TotalSeconds * 1000);

        var second = 1000;
        var minute = second * 60;
        var hour = minute * 60;
        var day = hour * 24;

        function showRemainingTime(secondsleft)
        {
            if (secondsleft <= 0)
            {
                clearInterval(timer);
                document.getElementById('timeleft').style.color = 'red';
                document.getElementById('timeleft').innerHTML = 'Time has run out for this lot.';
                return;
            }

            var days = Math.floor(secondsleft / day);
            var hours = Math.floor((secondsleft % day) / hour);
            var minutes = Math.floor((secondsleft % hour) / minute);
            var seconds = Math.floor((secondsleft % minute) / second);

            var daysleft = "";
            if (days > 0)
                daysleft += days + " day";
            if (days > 1)
                daysleft += "s";
            daysleft += " ";

            var timeleft = (hours < 10 ? "0" + hours : hours) + ":" + (minutes < 10 ? "0" + minutes : minutes) + ":" + (seconds < 10 ? "0" + seconds : seconds)

            document.getElementById('timeleft').innerHTML = daysleft;
            document.getElementById('timeleft').innerHTML += timeleft;

        }
        function call() {
            secondsleft1 -= 1000;
            showRemainingTime(secondsleft1);
        }
        timer = setInterval(call, 1000);
    </script>

    <script>
        $.validator.methods.number = function (value, element) {
            var globalizedValue = value.replace(",", ".");
            return globalizedValue;
        }
    </script>
}
